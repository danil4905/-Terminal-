{"ast":null,"code":"// Importing from `.json.js` a workaround for a bug in web browsers' \"native\"\n// ES6 importing system which is uncapable of importing \"*.json\" files.\n// https://github.com/catamphetamine/libphonenumber-js/issues/239\nimport metadata from '../metadata.min.json.js';\nimport { parsePhoneNumber as _parsePhoneNumber, parsePhoneNumberFromString as _parsePhoneNumberFromString, findNumbers as _findNumbers, searchNumbers as _searchNumbers, findPhoneNumbersInText as _findPhoneNumbersInText, searchPhoneNumbersInText as _searchPhoneNumbersInText, PhoneNumberMatcher as _PhoneNumberMatcher, AsYouType as _AsYouType, isSupportedCountry as _isSupportedCountry, getCountries as _getCountries, getCountryCallingCode as _getCountryCallingCode, getExtPrefix as _getExtPrefix, getExampleNumber as _getExampleNumber, formatIncompletePhoneNumber as _formatIncompletePhoneNumber, parseIncompletePhoneNumber, parsePhoneNumberCharacter, parseDigits, parseRFC3966, formatRFC3966 } from '../core/index';\nexport { ParseError, parseIncompletePhoneNumber, parsePhoneNumberCharacter, parseDigits, parseRFC3966, formatRFC3966 } from '../core/index';\n\nfunction call(func, _arguments) {\n  var args = Array.prototype.slice.call(_arguments);\n  args.push(metadata);\n  return func.apply(this, args);\n}\n\nexport function parsePhoneNumber() {\n  return call(_parsePhoneNumber, arguments);\n}\nexport function parsePhoneNumberFromString() {\n  return call(_parsePhoneNumberFromString, arguments);\n}\nexport function findNumbers() {\n  return call(_findNumbers, arguments);\n}\nexport function searchNumbers() {\n  return call(_searchNumbers, arguments);\n}\nexport function findPhoneNumbersInText() {\n  return call(_findPhoneNumbersInText, arguments);\n}\nexport function searchPhoneNumbersInText() {\n  return call(_searchPhoneNumbersInText, arguments);\n}\nexport function PhoneNumberMatcher(text, options) {\n  return _PhoneNumberMatcher.call(this, text, options, metadata);\n}\nPhoneNumberMatcher.prototype = Object.create(_PhoneNumberMatcher.prototype, {});\nPhoneNumberMatcher.prototype.constructor = PhoneNumberMatcher;\nexport function AsYouType(country) {\n  return _AsYouType.call(this, country, metadata);\n}\nAsYouType.prototype = Object.create(_AsYouType.prototype, {});\nAsYouType.prototype.constructor = AsYouType;\nexport function isSupportedCountry() {\n  return call(_isSupportedCountry, arguments);\n}\nexport function getCountries() {\n  return call(_getCountries, arguments);\n}\nexport function getCountryCallingCode() {\n  return call(_getCountryCallingCode, arguments);\n}\nexport function getExtPrefix(country) {\n  return call(_getExtPrefix, arguments);\n}\nexport function getExampleNumber() {\n  return call(_getExampleNumber, arguments);\n}\nexport function formatIncompletePhoneNumber() {\n  return call(_formatIncompletePhoneNumber, arguments);\n}","map":{"version":3,"sources":["/Users/danilkonovalov/my-app/node_modules/libphonenumber-js/min/index.js"],"names":["metadata","parsePhoneNumber","_parsePhoneNumber","parsePhoneNumberFromString","_parsePhoneNumberFromString","findNumbers","_findNumbers","searchNumbers","_searchNumbers","findPhoneNumbersInText","_findPhoneNumbersInText","searchPhoneNumbersInText","_searchPhoneNumbersInText","PhoneNumberMatcher","_PhoneNumberMatcher","AsYouType","_AsYouType","isSupportedCountry","_isSupportedCountry","getCountries","_getCountries","getCountryCallingCode","_getCountryCallingCode","getExtPrefix","_getExtPrefix","getExampleNumber","_getExampleNumber","formatIncompletePhoneNumber","_formatIncompletePhoneNumber","parseIncompletePhoneNumber","parsePhoneNumberCharacter","parseDigits","parseRFC3966","formatRFC3966","ParseError","call","func","_arguments","args","Array","prototype","slice","push","apply","arguments","text","options","Object","create","constructor","country"],"mappings":"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","sourcesContent":["// Importing from `.json.js` a workaround for a bug in web browsers' \"native\"\r\n// ES6 importing system which is uncapable of importing \"*.json\" files.\r\n// https://github.com/catamphetamine/libphonenumber-js/issues/239\r\nimport metadata from '../metadata.min.json.js'\r\n\r\nimport {\r\n\tparsePhoneNumber as _parsePhoneNumber,\r\n\tparsePhoneNumberFromString as _parsePhoneNumberFromString,\r\n\r\n\tfindNumbers as _findNumbers,\r\n\tsearchNumbers as _searchNumbers,\r\n\tfindPhoneNumbersInText as _findPhoneNumbersInText,\r\n\tsearchPhoneNumbersInText as _searchPhoneNumbersInText,\r\n\tPhoneNumberMatcher as _PhoneNumberMatcher,\r\n\r\n\tAsYouType as _AsYouType,\r\n\r\n\tisSupportedCountry as _isSupportedCountry,\r\n\tgetCountries as _getCountries,\r\n\tgetCountryCallingCode as _getCountryCallingCode,\r\n\tgetExtPrefix as _getExtPrefix,\r\n\r\n\tgetExampleNumber as _getExampleNumber,\r\n\r\n\tformatIncompletePhoneNumber as _formatIncompletePhoneNumber,\r\n\tparseIncompletePhoneNumber,\r\n\tparsePhoneNumberCharacter,\r\n\tparseDigits,\r\n\r\n\tparseRFC3966,\r\n\tformatRFC3966\r\n} from '../core/index'\r\n\r\nexport {\r\n\tParseError,\r\n\r\n\tparseIncompletePhoneNumber,\r\n\tparsePhoneNumberCharacter,\r\n\tparseDigits,\r\n\r\n\tparseRFC3966,\r\n\tformatRFC3966\r\n} from '../core/index'\r\n\r\nfunction call(func, _arguments) {\r\n\tvar args = Array.prototype.slice.call(_arguments)\r\n\targs.push(metadata)\r\n\treturn func.apply(this, args)\r\n}\r\n\r\nexport function parsePhoneNumber() {\r\n\treturn call(_parsePhoneNumber, arguments)\r\n}\r\n\r\nexport function parsePhoneNumberFromString() {\r\n\treturn call(_parsePhoneNumberFromString, arguments)\r\n}\r\n\r\nexport function findNumbers() {\r\n\treturn call(_findNumbers, arguments)\r\n}\r\n\r\nexport function searchNumbers() {\r\n\treturn call(_searchNumbers, arguments)\r\n}\r\n\r\nexport function findPhoneNumbersInText() {\r\n\treturn call(_findPhoneNumbersInText, arguments)\r\n}\r\n\r\nexport function searchPhoneNumbersInText() {\r\n\treturn call(_searchPhoneNumbersInText, arguments)\r\n}\r\n\r\nexport function PhoneNumberMatcher(text, options) {\r\n\treturn _PhoneNumberMatcher.call(this, text, options, metadata)\r\n}\r\nPhoneNumberMatcher.prototype = Object.create(_PhoneNumberMatcher.prototype, {})\r\nPhoneNumberMatcher.prototype.constructor = PhoneNumberMatcher\r\n\r\nexport function AsYouType(country) {\r\n\treturn _AsYouType.call(this, country, metadata)\r\n}\r\nAsYouType.prototype = Object.create(_AsYouType.prototype, {})\r\nAsYouType.prototype.constructor = AsYouType\r\n\r\nexport function isSupportedCountry() {\r\n\treturn call(_isSupportedCountry, arguments)\r\n}\r\n\r\nexport function getCountries() {\r\n\treturn call(_getCountries, arguments)\r\n}\r\n\r\nexport function getCountryCallingCode() {\r\n\treturn call(_getCountryCallingCode, arguments)\r\n}\r\n\r\nexport function getExtPrefix(country) {\r\n\treturn call(_getExtPrefix, arguments)\r\n}\r\n\r\nexport function getExampleNumber() {\r\n\treturn call(_getExampleNumber, arguments)\r\n}\r\n\r\nexport function formatIncompletePhoneNumber() {\r\n\treturn call(_formatIncompletePhoneNumber, arguments)\r\n}"]},"metadata":{},"sourceType":"module"}