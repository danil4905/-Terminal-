{"ast":null,"code":"import _slicedToArray from \"/Users/danilkonovalov/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/danilkonovalov/my-app/src/components/Check/CheckList.jsx\";\nimport React, { useState } from 'react';\nimport classes from './CheckList.module.css';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/material.css';\n\nlet onSendRequestClick = () => {\n  let a = Math.random() >= 0.5;\n\n  if (a === false) {\n    return alert(\"Ошибка , попробуйте еще раз\");\n  } else {\n    return alert(\"Запрос успешно отправлен!\");\n  }\n};\n\nconst CheckList = props => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  let currentID = props.match.params.operatorId;\n  currentID = Number.parseInt(currentID) - 1;\n  let currentName = props.operators[currentID].name;\n  console.log(typeof currentID);\n  return React.createElement(\"div\", {\n    className: classes.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, currentName), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    className: classes.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: classes.tel__wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430 \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(PhoneInput, {\n    country: \"ru\",\n    enableAreaCodes: true,\n    disableCountryCode: false,\n    disableDropdown: true,\n    countryCodeEditable: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }))), React.createElement(\"label\", {\n    className: classes.sum__wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u0443\\u043C\\u043C\\u0443 (100-1000 \\u0440\\u0443\\u0431)\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"number\",\n    className: classes.sum,\n    placeholder: \"\\u0421\\u0443\\u043C\\u043C\\u0430\",\n    required: true,\n    min: \"100\",\n    max: \"1000\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: onSendRequestClick,\n    className: classes.btn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"\\u041E\\u043F\\u043B\\u0430\\u0442\\u0438\\u0442\\u044C\")));\n};\n\nexport default CheckList;","map":{"version":3,"sources":["/Users/danilkonovalov/my-app/src/components/Check/CheckList.jsx"],"names":["React","useState","classes","PhoneInput","onSendRequestClick","a","Math","random","alert","CheckList","props","value","setValue","currentID","match","params","operatorId","Number","parseInt","currentName","operators","name","console","log","wrapper","form","tel__wrapper","sum__wrapper","sum","btn"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAO,sCAAP;;AAGA,IAAIC,kBAAkB,GAAG,MAAM;AAC7B,MAAIC,CAAC,GAAGC,IAAI,CAACC,MAAL,MAAiB,GAAzB;;AACA,MAAIF,CAAC,KAAK,KAAV,EAAiB;AAAE,WAAOG,KAAK,CAAC,6BAAD,CAAZ;AAA6C,GAAhE,MACK;AAAE,WAAOA,KAAK,CAAC,2BAAD,CAAZ;AAA2C;AACnD,CAJD;;AAMA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA,oBACDT,QAAQ,EADP;AAAA;AAAA,QACpBU,KADoB;AAAA,QACbC,QADa;;AAE3B,MAAIC,SAAS,GAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBC,UAAnC;AACAH,EAAAA,SAAS,GAAGI,MAAM,CAACC,QAAP,CAAgBL,SAAhB,IAA6B,CAAzC;AACA,MAAIM,WAAW,GAAGT,KAAK,CAACU,SAAN,CAAgBP,SAAhB,EAA2BQ,IAA7C;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOV,SAAnB;AACA,SACE;AAAK,IAAA,SAAS,EAAEX,OAAO,CAACsB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,WAAL,CADF,OACyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADzB,EAEE;AAAO,IAAA,SAAS,EAAEjB,OAAO,CAACuB,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAEvB,OAAO,CAACwB,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oIACyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADzB,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,UAAD;AACE,IAAA,OAAO,EAAE,IADX;AAEE,IAAA,eAAe,EAAE,IAFnB;AAGG,IAAA,kBAAkB,EAAE,KAHvB;AAII,IAAA,eAAe,EAAE,IAJrB;AAKI,IAAA,mBAAmB,EAAE,KALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAFF,CADF,EAaE;AAAO,IAAA,SAAS,EAAExB,OAAO,CAACyB,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,6GAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII;AAAK,IAAA,SAAS,EAAEzB,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAME;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAEA,OAAO,CAAC0B,GAFrB;AAGE,IAAA,WAAW,EAAC,gCAHd;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,GAAG,EAAC,KALN;AAME,IAAA,GAAG,EAAC,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAbF,EA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BF,EA6BE;AAAQ,IAAA,OAAO,EAAExB,kBAAjB;AAAqC,IAAA,SAAS,EAAEF,OAAO,CAAC2B,GAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDA7BF,CAFF,CADF;AAsCD,CA5CD;;AA6CA,eAAepB,SAAf","sourcesContent":["import React, {useState} from 'react';\nimport classes from './CheckList.module.css';\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/material.css';\n\n\nlet onSendRequestClick = () => {\n  let a = Math.random() >= 0.5;\n  if (a === false) { return alert(\"Ошибка , попробуйте еще раз\") }\n  else { return alert(\"Запрос успешно отправлен!\") }\n}\n\nconst CheckList = (props) => {\n  const [value, setValue] = useState()\n  let currentID = props.match.params.operatorId;\n  currentID = Number.parseInt(currentID) - 1;\n  let currentName = props.operators[currentID].name;\n  console.log(typeof currentID);\n  return (\n    <div className={classes.wrapper}>\n      <h3>{currentName}</h3> <br />\n      <form  className={classes.form}>\n        <label className={classes.tel__wrapper}>\n          Введите номер телефона <br />\n          <div>\n          <PhoneInput \n            country={\"ru\"}\n            enableAreaCodes={true}\n             disableCountryCode={false}\n              disableDropdown={true}\n              countryCodeEditable={false}\n          />\n          </div>\n        </label>\n        <label className={classes.sum__wrapper}>\n          <br />\n            Введите сумму (100-1000 руб)\n            <br />\n            <div className={classes}>\n           </div>\n          <input\n            type=\"number\"\n            className={classes.sum}\n            placeholder=\"Сумма\"\n            required\n            min=\"100\"\n            max=\"1000\"\n          />\n        </label>\n        <br />\n        <button onClick={onSendRequestClick} className={classes.btn}>\n          Оплатить\n          </button>\n      </form>\n    </div>\n  );\n}\nexport default CheckList;\n"]},"metadata":{},"sourceType":"module"}