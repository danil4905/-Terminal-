{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class, _temp2;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _PhoneInput = require('./PhoneInput');\n\nvar _PhoneInput2 = _interopRequireDefault(_PhoneInput);\n\nvar _CountrySelectReactResponsiveUI = require('./CountrySelectReactResponsiveUI');\n\nvar _CountrySelectReactResponsiveUI2 = _interopRequireDefault(_CountrySelectReactResponsiveUI);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PhoneInputReactResponsiveUI = (_temp2 = _class = function (_Component) {\n  _inherits(PhoneInputReactResponsiveUI, _Component);\n\n  function PhoneInputReactResponsiveUI() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, PhoneInputReactResponsiveUI);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PhoneInputReactResponsiveUI.__proto__ || Object.getPrototypeOf(PhoneInputReactResponsiveUI)).call.apply(_ref, [this].concat(args))), _this), _this.storeInputRef = function (ref) {\n      return _this.input = ref;\n    }, _this.focus = function () {\n      return _this.input.focus();\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  } // These two country-select-related properties are\n  // implemented as `defaultProps` instead of passing them\n  // directly to the `<PhoneInput/>` analogous to how it's\n  // implemented in `<PhoneInputNative/>` (see `./PhoneInputNative.js` notes).\n\n\n  _createClass(PhoneInputReactResponsiveUI, [{\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(_PhoneInput2.default, _extends({\n        ref: this.storeInputRef\n      }, this.props));\n    } // Proxy `.focus()` method.\n\n  }]);\n\n  return PhoneInputReactResponsiveUI;\n}(_react.Component), _class.propTypes = {\n  // `<input/>` CSS class.\n  // Both for the phone number `<input/>` and\n  // the country select autocomplete `<input/>`.\n  inputClassName: _propTypes2.default.string,\n  // If set to `false`, then country flags will be shown\n  // for all countries when country `<select/>` is expanded.\n  // By default shows flag only for currently selected country.\n  saveOnIcons: _propTypes2.default.bool,\n  // `aria-label` for the `<Select/>`'s toggle `<button/>`.\n  countrySelectAriaLabel: _propTypes2.default.string,\n  // `aria-label` for the `<Select/>`'s \"Close\" button\n  // (which is an \"x\" visible in fullscreen mode).\n  // (not yet implemented but is likely to be).\n  countrySelectCloseAriaLabel: _propTypes2.default.string,\n  // Defines the height (in items) of the expanded country `<select/>`.\n  countrySelectMaxItems: _propTypes2.default.number\n}, _class.defaultProps = {\n  countrySelectComponent: _CountrySelectReactResponsiveUI2.default,\n  countrySelectProperties: COUNTRY_SELECT_PROPERTIES,\n  getInputClassName: getInputClassName\n}, _temp2);\nexports.default = PhoneInputReactResponsiveUI;\nvar COUNTRY_SELECT_PROPERTIES = {\n  inputClassName: 'inputClassName',\n  saveOnIcons: 'saveOnIcons',\n  countrySelectAriaLabel: 'ariaLabel',\n  countrySelectCloseAriaLabel: 'closeAriaLabel',\n  countrySelectMaxItems: 'maxItems'\n};\n\nfunction getInputClassName(_ref2) {\n  var disabled = _ref2.disabled,\n      invalid = _ref2.invalid;\n  return (0, _classnames2.default)('rrui__input', 'rrui__input-element', 'rrui__input-field', {\n    'rrui__input-field--invalid': invalid,\n    'rrui__input-field--disabled': disabled\n  });\n}","map":{"version":3,"sources":["../source/PhoneInputReactResponsiveUI.js"],"names":["PhoneInputReactResponsiveUI","propTypes","inputClassName","saveOnIcons","countrySelectAriaLabel","countrySelectCloseAriaLabel","countrySelectMaxItems","defaultProps","countrySelectComponent","countrySelectProperties","getInputClassName","storeInputRef","focus","COUNTRY_SELECT_PROPERTIES","disabled","invalid"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;;;AAEA,IAAA,WAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;;;AACA,IAAA,+BAAA,GAAA,OAAA,CAAA,kCAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEqBA,2B;;;;;;;;;;;;;;gOAoCpBW,a,GAAgB,UAAA,GAAA,EAAA;AAAA,aAAS,KAAA,CAAA,KAAA,GAAT,GAAA;aAShBC,K,GAAQ,YAAA;AAAA,aAAM,KAAA,CAAA,KAAA,CAAN,KAAM,EAAN;;IAnBR;AACA;AACA;AACA;;;;;6BASS;AACR,aACC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,YAAA,CAAA,OAAA,EAAA,QAAA,CAAA;AAAY,QAAA,GAAA,EAAK,KAAjB;AAAA,OAAA,EAAyC,KAD1C,KACC,CAAA,CADD;AAGA,K,CAED;;;;;4BA1COX,S,GACP;AACC;AACA;AACA;AACAC,EAAAA,cAAAA,EAAiB,WAAA,CAAA,OAAA,CAJlB,MAAA;AAMC;AACA;AACA;AACAC,EAAAA,WAAAA,EAAc,WAAA,CAAA,OAAA,CATf,IAAA;AAWC;AACAC,EAAAA,sBAAAA,EAAyB,WAAA,CAAA,OAAA,CAZ1B,MAAA;AAcC;AACA;AACA;AACAC,EAAAA,2BAAAA,EAA8B,WAAA,CAAA,OAAA,CAjB/B,MAAA;AAmBC;AACAC,EAAAA,qBAAAA,EAAwB,WAAA,CAAA,OAAA,CApBzB;AAAA,C,SA2BOC,Y,GAAe;AACrBC,EAAAA,sBAAAA,EAAAA,gCAAAA,CADqB,OAAA;AAErBC,EAAAA,uBAAAA,EAFqB,yBAAA;AAGrBC,EAAAA,iBAAAA,EAAAA;AAHqB,C;kBA9BFV,2B;AAgDrB,IAAMa,yBAAAA,GACN;AACCX,EAAAA,cAAAA,EADD,gBAAA;AAECC,EAAAA,WAAAA,EAFD,aAAA;AAGCC,EAAAA,sBAAAA,EAHD,WAAA;AAICC,EAAAA,2BAAAA,EAJD,gBAAA;AAKCC,EAAAA,qBAAAA,EAA+B;AALhC,CADA;;AASA,SAAA,iBAAA,CAAA,KAAA,EACA;AAAA,MAD6BQ,QAC7B,GAAA,KAAA,CAD6BA,QAC7B;AAAA,MADuCC,OACvC,GAAA,KAAA,CADuCA,OACvC;AACC,SAAO,CAAA,GAAA,YAAA,CAAA,OAAA,EAAA,aAAA,EAAA,qBAAA,EAAA,mBAAA,EAKN;AACC,kCADD,OAAA;AAEC,mCAAgCD;AAFjC,GALM,CAAP;AAUA","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\n\r\nimport PhoneInput from './PhoneInput'\r\nimport CountrySelect from './CountrySelectReactResponsiveUI'\r\n\r\nexport default class PhoneInputReactResponsiveUI extends Component\r\n{\r\n\tstatic propTypes =\r\n\t{\r\n\t\t// `<input/>` CSS class.\r\n\t\t// Both for the phone number `<input/>` and\r\n\t\t// the country select autocomplete `<input/>`.\r\n\t\tinputClassName : PropTypes.string,\r\n\r\n\t\t// If set to `false`, then country flags will be shown\r\n\t\t// for all countries when country `<select/>` is expanded.\r\n\t\t// By default shows flag only for currently selected country.\r\n\t\tsaveOnIcons : PropTypes.bool,\r\n\r\n\t\t// `aria-label` for the `<Select/>`'s toggle `<button/>`.\r\n\t\tcountrySelectAriaLabel : PropTypes.string,\r\n\r\n\t\t// `aria-label` for the `<Select/>`'s \"Close\" button\r\n\t\t// (which is an \"x\" visible in fullscreen mode).\r\n\t\t// (not yet implemented but is likely to be).\r\n\t\tcountrySelectCloseAriaLabel : PropTypes.string,\r\n\r\n\t\t// Defines the height (in items) of the expanded country `<select/>`.\r\n\t\tcountrySelectMaxItems : PropTypes.number\r\n\t}\r\n\r\n\t// These two country-select-related properties are\r\n\t// implemented as `defaultProps` instead of passing them\r\n\t// directly to the `<PhoneInput/>` analogous to how it's\r\n\t// implemented in `<PhoneInputNative/>` (see `./PhoneInputNative.js` notes).\r\n\tstatic defaultProps = {\r\n\t\tcountrySelectComponent: CountrySelect,\r\n\t\tcountrySelectProperties: COUNTRY_SELECT_PROPERTIES,\r\n\t\tgetInputClassName\r\n\t}\r\n\r\n\tstoreInputRef = (ref) => this.input = ref\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<PhoneInput ref={this.storeInputRef} {...this.props}/>\r\n\t\t)\r\n\t}\r\n\r\n\t// Proxy `.focus()` method.\r\n\tfocus = () => this.input.focus()\r\n}\r\n\r\nconst COUNTRY_SELECT_PROPERTIES =\r\n{\r\n\tinputClassName               : 'inputClassName',\r\n\tsaveOnIcons                  : 'saveOnIcons',\r\n\tcountrySelectAriaLabel       : 'ariaLabel',\r\n\tcountrySelectCloseAriaLabel  : 'closeAriaLabel',\r\n\tcountrySelectMaxItems        : 'maxItems'\r\n}\r\n\r\nfunction getInputClassName({ disabled, invalid })\r\n{\r\n\treturn classNames\r\n\t(\r\n\t\t'rrui__input',\r\n\t\t'rrui__input-element',\r\n\t\t'rrui__input-field',\r\n\t\t{\r\n\t\t\t'rrui__input-field--invalid'  : invalid,\r\n\t\t\t'rrui__input-field--disabled' : disabled\r\n\t\t}\r\n\t)\r\n}"]},"metadata":{},"sourceType":"script"}