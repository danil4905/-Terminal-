{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class, _temp2;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CountrySelectNative = (_temp2 = _class = function (_Component) {\n  _inherits(CountrySelectNative, _Component);\n\n  function CountrySelectNative() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, CountrySelectNative);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = CountrySelectNative.__proto__ || Object.getPrototypeOf(CountrySelectNative)).call.apply(_ref, [this].concat(args))), _this), _this.onChange = function (event) {\n      var onChange = _this.props.onChange;\n      var value = event.target.value;\n      onChange(value === 'ZZ' ? undefined : value);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(CountrySelectNative, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          name = _props.name,\n          value = _props.value,\n          options = _props.options,\n          onFocus = _props.onFocus,\n          onBlur = _props.onBlur,\n          disabled = _props.disabled,\n          tabIndex = _props.tabIndex,\n          className = _props.className,\n          SelectArrow = _props.selectArrowComponent;\n      var selectedOption = void 0;\n\n      for (var _iterator = options, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref2 = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref2 = _i.value;\n        }\n\n        var option = _ref2;\n\n        if (!option.divider && option.value === value) {\n          selectedOption = option;\n        }\n      }\n\n      return _react2.default.createElement('div', {\n        className: (0, _classnames2.default)(className, 'react-phone-number-input__country--native')\n      }, selectedOption && _react2.default.createElement(selectedOption.icon, {\n        value: value\n      }), _react2.default.createElement('select', {\n        name: name,\n        value: value || 'ZZ',\n        onChange: this.onChange,\n        onFocus: onFocus,\n        onBlur: onBlur,\n        disabled: disabled,\n        tabIndex: tabIndex,\n        'aria-label': this.props['aria-label'],\n        className: 'react-phone-number-input__country-select'\n      }, options.map(function (_ref3) {\n        var value = _ref3.value,\n            label = _ref3.label,\n            divider = _ref3.divider;\n        return _react2.default.createElement('option', {\n          key: divider ? '|' : value || 'ZZ',\n          value: divider ? '|' : value || 'ZZ',\n          disabled: divider ? true : false,\n          className: divider ? 'react-phone-number-input__country-select-divider' : undefined\n        }, label);\n      })), _react2.default.createElement(SelectArrow, null));\n    }\n  }]);\n\n  return CountrySelectNative;\n}(_react.Component), _class.propTypes = {\n  // A two-letter country code.\n  // E.g. \"US\", \"RU\", etc.\n  value: _propTypes2.default.string,\n  // Updates the `value`.\n  onChange: _propTypes2.default.func.isRequired,\n  // `<select/>` options.\n  options: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    value: _propTypes2.default.string,\n    label: _propTypes2.default.string,\n    divider: _propTypes2.default.bool\n  })).isRequired,\n  // HTML `name` attribute.\n  name: _propTypes2.default.string,\n  // HTML `disabled` attribute.\n  disabled: _propTypes2.default.bool,\n  // HTML `tabIndex` attribute.\n  tabIndex: _propTypes2.default.number,\n  // Select arrow component.\n  selectArrowComponent: _propTypes2.default.elementType.isRequired,\n  // Toggles the `--focus` CSS class.\n  // https://github.com/catamphetamine/react-phone-number-input/issues/189\n  onFocus: _propTypes2.default.func,\n  // Toggles the `--focus` CSS class.\n  // https://github.com/catamphetamine/react-phone-number-input/issues/189\n  onBlur: _propTypes2.default.func\n}, _class.defaultProps = {\n  selectArrowComponent: function selectArrowComponent() {\n    return _react2.default.createElement('div', {\n      className: 'react-phone-number-input__country-select-arrow'\n    });\n  }\n}, _temp2);\nexports.default = CountrySelectNative;","map":{"version":3,"sources":["../source/CountrySelectNative.js"],"names":["CountrySelectNative","propTypes","value","onChange","options","label","divider","bool","name","disabled","tabIndex","selectArrowComponent","onFocus","onBlur","func","defaultProps","event","className","SelectArrow","selectedOption","option"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEqBA,mB;;;;;;;;;;;;;;gNA4CpBG,Q,GAAW,UAAA,KAAA,EACX;AAAA,UACSA,QADT,GACsB,KAAA,CADtB,KACsB,CADtB,QAAA;AAEC,UAAMD,KAAAA,GAAQc,KAAAA,CAAAA,MAAAA,CAAd,KAAA;AACAb,MAAAA,QAAAA,CAASD,KAAAA,KAAAA,IAAAA,GAAAA,SAAAA,GAATC,KAAAA,CAAAA;;;;;;6BAID;AAAA,UAAA,MAAA,GAaG,KAbH,KAAA;AAAA,UAGEK,IAHF,GAAA,MAAA,CAAA,IAAA;AAAA,UAIEN,KAJF,GAAA,MAAA,CAAA,KAAA;AAAA,UAKEE,OALF,GAAA,MAAA,CAAA,OAAA;AAAA,UAMEQ,OANF,GAAA,MAAA,CAAA,OAAA;AAAA,UAOEC,MAPF,GAAA,MAAA,CAAA,MAAA;AAAA,UAQEJ,QARF,GAAA,MAAA,CAAA,QAAA;AAAA,UASEC,QATF,GAAA,MAAA,CAAA,QAAA;AAAA,UAUEO,SAVF,GAAA,MAAA,CAAA,SAAA;AAAA,UAWyBC,WAXzB,GAAA,MAAA,CAAA,oBAAA;AAeC,UAAIC,cAAAA,GAAAA,KAAJ,CAAA;;AACA,WAAA,IAAA,SAAA,GAAA,OAAA,EAAA,QAAA,GAAA,KAAA,CAAA,OAAA,CAAA,SAAA,CAAA,EAAA,EAAA,GAAA,CAAA,EAAA,SAAA,GAAA,QAAA,GAAA,SAAA,GAAA,SAAA,CAAA,MAAA,CAAA,QAAA,CAAA,EAAA,IAA8B;AAAA,YAAA,KAAA;;AAAA,YAAA,QAAA,EAAA;AAAA,cAAA,EAAA,IAAA,SAAA,CAAA,MAAA,EAAA;AAAA,UAAA,KAAA,GAAA,SAAA,CAAA,EAAA,EAAA,CAAA;AAAA,SAAA,MAAA;AAAA,UAAA,EAAA,GAAA,SAAA,CAAA,IAAA,EAAA;AAAA,cAAA,EAAA,CAAA,IAAA,EAAA;AAAA,UAAA,KAAA,GAAA,EAAA,CAAA,KAAA;AAAA;;AAAA,YAAnBC,MAAmB,GAAA,KAAA;;AAC7B,YAAI,CAACA,MAAAA,CAAD,OAAA,IAAmBA,MAAAA,CAAAA,KAAAA,KAAvB,KAAA,EAA+C;AAC9CD,UAAAA,cAAAA,GAAAA,MAAAA;AACA;AACD;;AAED,aACC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAA,EAAY,CAAA,GAAA,YAAA,CAAA,OAAA,EAAA,SAAA,EAAjB,2CAAiB;AAAjB,OAAA,EACGA,cAAAA,IAAkB,OAAA,CAAA,OAAA,CAAA,aAAA,CAAoBA,cAAAA,CAApB,IAAA,EAA0C;AAAEjB,QAAAA,KAAAA,EADjE;AAC+D,OAA1C,CADrB,EAGC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACC,QAAA,IAAA,EADD,IAAA;AAEC,QAAA,KAAA,EAAQA,KAAAA,IAFT,IAAA;AAGC,QAAA,QAAA,EAAW,KAHZ,QAAA;AAIC,QAAA,OAAA,EAJD,OAAA;AAKC,QAAA,MAAA,EALD,MAAA;AAMC,QAAA,QAAA,EAND,QAAA;AAOC,QAAA,QAAA,EAPD,QAAA;AAQC,sBAAa,KAAA,KAAA,CARd,YAQc,CARd;AASC,QAAA,SAAA,EATD;AAAA,OAAA,EAUEE,OAAAA,CAAAA,GAAAA,CAAY,UAAA,KAAA,EAAA;AAAA,YAAGF,KAAH,GAAA,KAAA,CAAA,KAAA;AAAA,YAAUG,KAAV,GAAA,KAAA,CAAA,KAAA;AAAA,YAAiBC,OAAjB,GAAA,KAAA,CAAA,OAAA;AAAA,eACZ,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACC,UAAA,GAAA,EAAMA,OAAAA,GAAAA,GAAAA,GAAgBJ,KAAAA,IADvB,IAAA;AAEC,UAAA,KAAA,EAAQI,OAAAA,GAAAA,GAAAA,GAAgBJ,KAAAA,IAFzB,IAAA;AAGC,UAAA,QAAA,EAAWI,OAAAA,GAAAA,IAAAA,GAHZ,KAAA;AAIC,UAAA,SAAA,EAAYA,OAAAA,GAAAA,kDAAAA,GAJb;AAAA,SAAA,EAKGD,KALH,CADY;AAAZD,OAAAA,CAVF,CAHD,EAwBC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,WAAA,EAAA,IAAA,CAxBD,CADD;AA4BA;;;;4BApGMH,S,GACP;AACC;AACA;AACAC,EAAAA,KAAAA,EAAQ,WAAA,CAAA,OAAA,CAHT,MAAA;AAKC;AACAC,EAAAA,QAAAA,EAAW,WAAA,CAAA,OAAA,CAAA,IAAA,CANZ,UAAA;AAQC;AACAC,EAAAA,OAAAA,EAAU,WAAA,CAAA,OAAA,CAAA,OAAA,CAAkB,WAAA,CAAA,OAAA,CAAA,KAAA,CAAgB;AAC3CF,IAAAA,KAAAA,EAAQ,WAAA,CAAA,OAAA,CADmC,MAAA;AAE3CG,IAAAA,KAAAA,EAAQ,WAAA,CAAA,OAAA,CAFmC,MAAA;AAG3CC,IAAAA,OAAAA,EAAU,WAAA,CAAA,OAAA,CAAUC;AAHuB,GAAhB,CAAlB,EATX,UAAA;AAeC;AACAC,EAAAA,IAAAA,EAAO,WAAA,CAAA,OAAA,CAhBR,MAAA;AAkBC;AACAC,EAAAA,QAAAA,EAAW,WAAA,CAAA,OAAA,CAnBZ,IAAA;AAqBC;AACAC,EAAAA,QAAAA,EAAW,WAAA,CAAA,OAAA,CAtBZ,MAAA;AAwBC;AACAC,EAAAA,oBAAAA,EAAuB,WAAA,CAAA,OAAA,CAAA,WAAA,CAzBxB,UAAA;AA2BC;AACA;AACAC,EAAAA,OAAAA,EAAU,WAAA,CAAA,OAAA,CA7BX,IAAA;AA+BC;AACA;AACAC,EAAAA,MAAAA,EAAS,WAAA,CAAA,OAAA,CAAUC;AAjCpB,C,SAoCOC,Y,GACP;AACCJ,EAAAA,oBAAAA,EAAuB,SAAA,oBAAA,GAAA;AAAA,WAAM,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAA,EAAX;AAAM,KAAA,CAAN;AAAA;AADxB,C;kBAxCoBX,mB","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\n\r\nexport default class CountrySelectNative extends Component\r\n{\r\n\tstatic propTypes =\r\n\t{\r\n\t\t// A two-letter country code.\r\n\t\t// E.g. \"US\", \"RU\", etc.\r\n\t\tvalue : PropTypes.string,\r\n\r\n\t\t// Updates the `value`.\r\n\t\tonChange : PropTypes.func.isRequired,\r\n\r\n\t\t// `<select/>` options.\r\n\t\toptions : PropTypes.arrayOf(PropTypes.shape({\r\n\t\t\tvalue : PropTypes.string,\r\n\t\t\tlabel : PropTypes.string,\r\n\t\t\tdivider : PropTypes.bool\r\n\t\t})).isRequired,\r\n\r\n\t\t// HTML `name` attribute.\r\n\t\tname : PropTypes.string,\r\n\r\n\t\t// HTML `disabled` attribute.\r\n\t\tdisabled : PropTypes.bool,\r\n\r\n\t\t// HTML `tabIndex` attribute.\r\n\t\ttabIndex : PropTypes.number,\r\n\r\n\t\t// Select arrow component.\r\n\t\tselectArrowComponent : PropTypes.elementType.isRequired,\r\n\r\n\t\t// Toggles the `--focus` CSS class.\r\n\t\t// https://github.com/catamphetamine/react-phone-number-input/issues/189\r\n\t\tonFocus : PropTypes.func,\r\n\r\n\t\t// Toggles the `--focus` CSS class.\r\n\t\t// https://github.com/catamphetamine/react-phone-number-input/issues/189\r\n\t\tonBlur : PropTypes.func\r\n\t}\r\n\r\n\tstatic defaultProps =\r\n\t{\r\n\t\tselectArrowComponent : () => <div className=\"react-phone-number-input__country-select-arrow\"/>\r\n\t}\r\n\r\n\tonChange = (event) =>\r\n\t{\r\n\t\tconst { onChange } = this.props\r\n\t\tconst value = event.target.value\r\n\t\tonChange(value === 'ZZ' ? undefined : value)\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tname,\r\n\t\t\tvalue,\r\n\t\t\toptions,\r\n\t\t\tonFocus,\r\n\t\t\tonBlur,\r\n\t\t\tdisabled,\r\n\t\t\ttabIndex,\r\n\t\t\tclassName,\r\n\t\t\tselectArrowComponent : SelectArrow\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\tlet selectedOption\r\n\t\tfor (const option of options) {\r\n\t\t\tif (!option.divider && option.value === value) {\r\n\t\t\t\tselectedOption = option\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className={ classNames(className, 'react-phone-number-input__country--native') }>\r\n\t\t\t\t{ selectedOption && React.createElement(selectedOption.icon, ({ value })) }\r\n\r\n\t\t\t\t<select\r\n\t\t\t\t\tname={ name }\r\n\t\t\t\t\tvalue={ value || 'ZZ' }\r\n\t\t\t\t\tonChange={ this.onChange }\r\n\t\t\t\t\tonFocus={ onFocus }\r\n\t\t\t\t\tonBlur={ onBlur }\r\n\t\t\t\t\tdisabled={ disabled }\r\n\t\t\t\t\ttabIndex={ tabIndex }\r\n\t\t\t\t\taria-label={ this.props['aria-label'] }\r\n\t\t\t\t\tclassName=\"react-phone-number-input__country-select\">\r\n\t\t\t\t\t{options.map(({ value, label, divider }) => (\r\n\t\t\t\t\t\t<option\r\n\t\t\t\t\t\t\tkey={ divider ? '|' : value || 'ZZ' }\r\n\t\t\t\t\t\t\tvalue={ divider ? '|' : value || 'ZZ' }\r\n\t\t\t\t\t\t\tdisabled={ divider ? true : false }\r\n\t\t\t\t\t\t\tclassName={ divider ? 'react-phone-number-input__country-select-divider' : undefined }>\r\n\t\t\t\t\t\t\t{ label }\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\r\n\t\t\t\t<SelectArrow/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}"]},"metadata":{},"sourceType":"script"}