{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.default = WithError;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n/**\r\n * .rrui__interaction--pointer {\r\n *   outline: none;\r\n *   box-shadow: none;\r\n * }\r\n * <Interaction><input .../></Interaction>\r\n * <Interaction><button .../></Interaction>\r\n */\n\n\nfunction WithError(props) {\n  var setRef = props.setRef,\n      error = props.error,\n      indicateInvalid = props.indicateInvalid,\n      children = props.children,\n      rest = _objectWithoutProperties(props, ['setRef', 'error', 'indicateInvalid', 'children']);\n\n  return _react2.default.createElement('div', _extends({\n    ref: setRef\n  }, rest), children, indicateInvalid && error && _react2.default.createElement('div', {\n    className: 'rrui__input-error'\n  }, error));\n}\n\nWithError.propTypes = {\n  setRef: _propTypes2.default.func,\n  // Renders an error message below the `<input/>`\n  error: _propTypes2.default.string,\n  // Deprecated.\n  // If this flag is `true` then the `error` is shown.\n  // If this flag is `false` then the `error` is not shown (even if passed).\n  indicateInvalid: _propTypes2.default.bool,\n  // CSS style object\n  style: _propTypes2.default.object,\n  // CSS name\n  className: _propTypes2.default.string,\n  children: _propTypes2.default.node.isRequired\n};\nWithError.defaultProps = {\n  // Deprecated.\n  // Show `error` (if passed).\n  indicateInvalid: true\n};","map":{"version":3,"sources":["../source/WithError.js"],"names":["WithError","setRef","error","indicateInvalid","children","rest","props","style","className","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;kBAWwBA,S;;AAXxB,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;AAQe,SAAA,SAAA,CAAA,KAAA,EAA0B;AAAA,MAEvCC,MAFuC,GAOpCK,KAPoC,CAAA,MAAA;AAAA,MAGvCJ,KAHuC,GAOpCI,KAPoC,CAAA,KAAA;AAAA,MAIvCH,eAJuC,GAOpCG,KAPoC,CAAA,eAAA;AAAA,MAKvCF,QALuC,GAOpCE,KAPoC,CAAA,QAAA;AAAA,MAMpCD,IANoC,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,QAAA,EAAA,OAAA,EAAA,iBAAA,EAAA,UAAA,CAAA,CAAA;;AAQxC,SACC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AAAK,IAAA,GAAA,EAAL;AAAA,GAAA,EAAA,IAAA,CAAA,EAAA,QAAA,EAGGF,eAAAA,IAAAA,KAAAA,IACD,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAA,EAAL;AAAA,GAAA,EACGD,KADH,CAJF,CADD;AAWA;;AAEDF,SAAAA,CAAAA,SAAAA,GAAsB;AACrBC,EAAAA,MAAAA,EAAS,WAAA,CAAA,OAAA,CADY,IAAA;AAGrB;AACAC,EAAAA,KAAAA,EAAQ,WAAA,CAAA,OAAA,CAJa,MAAA;AAMrB;AACA;AACA;AACAC,EAAAA,eAAAA,EAAkB,WAAA,CAAA,OAAA,CATG,IAAA;AAWrB;AACAI,EAAAA,KAAAA,EAAQ,WAAA,CAAA,OAAA,CAZa,MAAA;AAcrB;AACAC,EAAAA,SAAAA,EAAY,WAAA,CAAA,OAAA,CAfS,MAAA;AAiBrBJ,EAAAA,QAAAA,EAAW,WAAA,CAAA,OAAA,CAAA,IAAA,CAAeK;AAjBL,CAAtBT;AAoBAA,SAAAA,CAAAA,YAAAA,GAAyB;AACxB;AACA;AACAG,EAAAA,eAAAA,EAAkB;AAHM,CAAzBH","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n/**\r\n * .rrui__interaction--pointer {\r\n *   outline: none;\r\n *   box-shadow: none;\r\n * }\r\n * <Interaction><input .../></Interaction>\r\n * <Interaction><button .../></Interaction>\r\n */\r\nexport default function WithError(props) {\r\n\tconst {\r\n\t\tsetRef,\r\n\t\terror,\r\n\t\tindicateInvalid,\r\n\t\tchildren,\r\n\t\t...rest\r\n\t} = props\r\n\treturn (\r\n\t\t<div ref={setRef} {...rest}>\r\n\t\t\t{children}\r\n\t\t\t{/* Error message */}\r\n\t\t\t{ indicateInvalid && error &&\r\n\t\t\t\t<div className=\"rrui__input-error\">\r\n\t\t\t\t\t{ error }\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nWithError.propTypes = {\r\n\tsetRef : PropTypes.func,\r\n\r\n\t// Renders an error message below the `<input/>`\r\n\terror : PropTypes.string,\r\n\r\n\t// Deprecated.\r\n\t// If this flag is `true` then the `error` is shown.\r\n\t// If this flag is `false` then the `error` is not shown (even if passed).\r\n\tindicateInvalid : PropTypes.bool,\r\n\r\n\t// CSS style object\r\n\tstyle : PropTypes.object,\r\n\r\n\t// CSS name\r\n\tclassName : PropTypes.string,\r\n\r\n\tchildren : PropTypes.node.isRequired\r\n}\r\n\r\nWithError.defaultProps = {\r\n\t// Deprecated.\r\n\t// Show `error` (if passed).\r\n\tindicateInvalid : true\r\n}"]},"metadata":{},"sourceType":"script"}